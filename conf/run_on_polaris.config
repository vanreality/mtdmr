/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: 'copy',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'GUNZIP|SAMTOOLS_SORT|SAMTOOLS_FAIDX|SAMTOOLS_INDEX|METHYLDACKEL_EXTRACT' {
        container = "${baseDir}/images/methyldackel.sif"
        cpus = 8
        time = '1h'
        queue = 'fat4way'
        clusterOptions = '--qos=chengqiyif4w -A chengqiyi_g1 -N 1'
    }

    // withName: 'SAMTOOLS_SORT' {
    //     ext.prefix = { "${meta.id}.sorted" }
    // }

    withName: 'METHYLDACKEL_EXTRACT' {
        ext.args = '-p 10 -q 10 --mergeContext'
    }

    withName: 'MERGE_BEDGRAPHS' {
        container = "${baseDir}/images/common_tools.sif"
        cpus = 8
        time = '12h'
        queue = 'fat4way'
        clusterOptions = '--qos=chengqiyif4w -A chengqiyi_g1 -N 1'
    }

    withName: 'METILENE' {
        container = "${baseDir}/images/wgbstools_0.2.2_metilene_0.2.8.sif"
        cpus = 20
        time = '12h'
        queue = 'fat4way'
        clusterOptions = '--qos=chengqiyif4w -A chengqiyi_g1 -N 1'
        ext.args = '-a target -b background -m 3'
    }
}

params {
    config_profile_name        = 'Polaris profile'
    config_profile_description = 'Run on Polaris'

    // Input parameters
    input = null
    reference = null
    outdir = null
}

profiles {
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        singularity.runOptions = '--bind /gpfs1,/gpfs3,/home'
    }
}
